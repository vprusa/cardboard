ext {
    gagWebScalaSharedVersion = '1.0-SNAPSHOT'
}
apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.google.cardboard.hellocardboard"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.1"
        multiDexEnabled true
        // TODO deal with gag-web-scala-shared methods count (disable multiDexEnabled)
        // - Cannot fit requested classes in a single dex file (# methods: 109909 > 65536)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

repositories {
    mavenLocal()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.2'
    // Android Mobile Vision
    implementation 'com.google.android.gms:play-services-vision:20.1.2'
    implementation 'com.android.support:design:28.0.0'
    implementation project(":sdk")
    //    implementation 'cz.muni.fi.gag.web:gag-web-scala:1.0-SNAPSHOT'
//    implementation 'cz.muni.fi.gag.web:gag-web-scala:1.0-SNAPSHOT'
//    compile 'com.android.support:support-annotations:22.2.0'
    implementation 'cz.muni.fi.gag.web:gag-web-scala-shared_2.11:1.0-SNAPSHOT'

    implementation 'com.github.Ficat:EasyBle:v2.0.1'
}

// The dependencies for NDK builds live inside the .aar files so they need to
// be extracted before NDK targets can link against.
task extractNdk(type: Copy)  {
    if (file("${project.rootDir}/sdk/build/outputs/aar/sdk-release.aar").exists()) {
        copy {
            from zipTree("${project.rootDir}/sdk/build/outputs/aar/sdk-release.aar")
            into "libraries/"
            include "jni/**/libcardboard_api.so"
        }
        copy {
            from "${project.rootDir}/sdk/include/cardboard.h"
            into "libraries/"
        }
    }
}

task deleteNdk(type: Delete) {
    delete "libraries/jni"
    delete "libraries/cardboard.h"
}

build.dependsOn(extractNdk)
clean.dependsOn(deleteNdk)
